 Over the last twenty-five years or so, many profound relations have emerged between logic and grammar. Computational linguistics (or natural language processing) is a branch of AI, and it is fairly natural to classify some of these developments under logic and AI. But many of them also belong to an independent tradition in logical foundations of linguistics; and in many cases it is hard (and pointless) to attempt a classification. This sketch will concentrate on developments that have to do with reasoning about linguistics; other applications of logic to linguistics are described in  van Benthem & ter Meulen 1996. Grammar formalisms—special-purpose systems for the description of linguistic systems and subsystems—can be thought of as logics designed to axiomatize the association of linguistic structures with strings of symbols. You might be able to infer from such a system, for instance, that ‘assignments’ is the plural form of the nominalization of the verb ‘assign’. So you can look at the process of parsing a string of words—of finding the linguistic structures, if any, that are associated with it—as a search for a proof in a certain logical system. This approach has been highly successful as an analytic tool. It makes model-theoretic techniques applicable to linguistic reasoning, This makes the underlying reasoning problems much more transparent, and makes it possible to apply many well-developed areas of logic to grammar formalisms. For more information on these topics, see  Buszkowski 1996;  Shieber 1992. The usefulness and scope of logical methods in relation to linguistics is greatly increased by the development of techniques for analyzing the way information attaches to linguistic units. It is very natural to represent the information attaching, say, to a lexical item in the form of a set of functions (or attributes) that produce values in some linguistic domain. A pronoun x may have a number, a person, and a case: if x = ‘we’ then In more general cases, the values of these functions may themselves be linguistic units that take on values for certain attributes. Allowing these functions to be partial provides a useful informational representation of the stages of a linguistic parse; much of the work of parsing involves completing this partial information, subject to constraints imposed by linguistic agreement conditions. Feature structures—sets of identities that serve to evaluate linguistic features—have a natural algebraic interpretation, and there is an elegant treatment of their logic. For more information and references, see  Rounds 1996. The reasoning associated with discourse is the probably the least well understood area of computational linguistics. Although logical techniques do not yet play a major role in discourse, they seem to offer one of the most promising ways of providing a uniform account of the many forms of reasoning that are involved in generating and interpreting language in interactive conversation. We  briefly mention three contributions to this area. Building on the fact that the rules governing conversation are exception-ridden, Alex Lascarides and Nicholas Asher have developed techniques for formalizing discourse phenomena based on nonmonotonic logic; see  Asher & Lascarides 1994,  Asher & Lascarides 1997.  Jerry Hobbs and various co-workers look at the inference processes used in discourse as abductive, and propose to formalize abduction as a search for a proof in which certain “low-cost” assumptions may be made which serve as data or additional axioms for the proof.  Hobbs et al. 1993  shows how an impressive range of discourse phenomena can be formalized using this idea. In practice, this abductive account looks rather similar to that of Lascarides and Asher, because it involves deploying axioms about discourse (in the form of Horn clause rules supplemented with weights giving the assumption costs of premises) that in effect are nonmonotonic. In more recent work, Matthew Stone shows in  Stone 1998  how modal logic can inform the complex reasoning involved in natural language generation. Generating a coherent, appropriately phrased text that usefully performs a task-oriented communication task is difficult to formalize because it requires the integration of complex and sophisticated domain information with discourse planning, user modeling, and linguistic constraints. Stone shows that modal logic can be used to modularize the formalization of the information required in this task; he also shows how modal theorem proving can be used to implement the reasoning.