 In the 1960s and 1970s, cognitive scientists almost universally modeled mental activity as rule-governed symbol manipulation. In the 1980s, connectionism gained currency as an alternative computational framework. Connectionists employ computational models, called neural networks, that differ quite significantly from Turing-style models. There is no central processor. There are no memory locations for symbols to be inscribed. Instead, there is a network of nodes bearing weighted connections to one another. During computation, waves of activation spread through the network. A node’s activation level depends upon the weighted activations of the nodes to which it is connected. Nodes function somewhat analogously to neurons, and connections between nodes function somewhat analogously to synapses. One should receive the neurophysiological analogy cautiously, as there are numerous important differences between neural networks and actual neural configurations in the brain (Bechtel & Abramson 2002: 341–343; Bermúdez 2010: 237–239; Clark 2014: 87–89; Harnish 2002: 359–362). Connectionists raise many objections to the classical computational paradigm (Rumelhart, McClelland, & the PDP Research Group 1986; Horgan & Tienson 1996; McLaughlin & Warfield 1994; Bechtel & Abrahamsen 2002), such as that classical systems are not biologically realistic or that they are unable to model certain psychological tasks. Classicists in turn launch various arguments against connectionism. The most famous arguments showcase productivity, systematicity of thought, and systematicity of thinking. Fodor and Pylyshyn (1988) argue that these phenomena support classical CTM over connectionist CTM. Fodor and Pylyshyn’s argument hinges on the distinction between eliminative connectionism and implementationist connectionism (cf. Pinker & Prince 1988). Eliminative connectionists advance neural networks as a replacement for the Turing-style formalism. They deny that mental computation consists in rule-governed symbol manipulation. Implementationist connectionists allow that, in some cases, mental computation may instantiate rule-governed symbol manipulation. They advance neural networks not to replace classical computations but rather to model how classical computations are implemented in the brain. The hope is that, because neural network computation more closely resembles actual brain activity, it can illuminate the physical realization of rule-governed symbol manipulation. Building on Aydede’s (2015) discussion, we may reconstruct Fodor and Pylyshyn’s argument like so: The argument does not say that neural networks are unable to model systematicity. One can certainly build a neural network that is systematic. For example, one might build a neural network that can represent that John loves Mary only if it can represent that Mary loves John. The problem is that one might just as well build a neural network that can represent that John loves Mary but cannot represent that Mary loves John. Hence, nothing about the connectionist framework per se guarantees systematicity. For that reason, the framework does not explain the nomic necessity of systematicity. It does not explain why all the minds we find are systematic. In contrast, the classical framework mandates systematicity, and so it explains the nomic necessity of systematicity. The only apparent recourse for connectionists is to adopt the classical explanation, thereby becoming implementationist rather than eliminative connectionists. Fodor and Pylyshyn’s argument has spawned a massive literature, including too many rebuttals to survey here. The most popular responses fall into five categories: We focus here on (vi). As discussed in  section 1.2,  Fodor elucidates constituency structure in terms of part/whole relations. A complex representation’s constituents are literal parts of it. One consequence is that, whenever the first representation is tokened, so are its constituents. Fodor takes this consequence to be definitive of classical computation. As Fodor and McLaughlin (1990: 186) put it: for a pair of expression types E1, E2, the first is a Classical constituent of the second only if the first is tokened whenever the second is tokened. Thus, structured representations have a concatenative structure: each token of a structured representation involves a concatenation of tokens of the constituent representations. Connectionists who deny (vi) espouse a non-concatenative conception of constituency structure, according to which structure is encoded by a suitable distributed representation. Developments of the non-concatenative conception are usually quite technical (Elman 1989; Hinton 1990; Pollack 1990; Smolensky 1990, 1991, 1995; Touretzky 1990). Most models use vector or tensor algebra to define operations over connectionist representations, which are codified by activity vectors across nodes in a neural network. The representations are said to have implicit constituency structure: the constituents are not literal parts of the complex representation, but they can be extracted from the complex representation through suitable computational operations over it. Fodor and McLaughlin (1990) grant that distributed representations may have constituency structure “in an extended sense”. But they insist that distributed representations are ill-suited to explain systematicity. They focus especially on the systematicity of thinking, the classical explanation for which postulates mechanical operations that respond to constituency structure. Fodor and McLaughlin argue that the non-concatenative conception cannot replicate the classical explanation and offers no satisfactory substitute for it. Chalmers (1993) and Niklasson and van Gelder (1994) disagree. They contend that a neural network can execute structure-sensitive computations over representations that have non-concatenative constituency structure. They conclude that connectionists can explain productivity and systematicity without retreating to implementationist connectionism. Aydede (1995, 1997a) agrees that there is a legitimate notion of non-concatenative constituency structure, but he questions whether the resulting models are non-classical. He denies that we should regard concatenative structure as integral to LOTH. According to Aydede, concatenative structure is just one possible physical realization of constituency structure. Non-concatenative structure is another possible realization. We can accept RTT+COMP without glossing constituency structure in concatenative terms. On this view, a neural network whose operations are sensitive to non-concatenative constituency structure may still count as broadly classical and in particular as manipulating Mentalese expressions. The debate between classical and connectionist CTM is still active, although not as active as during the 1990s. Recent anti-connectionist arguments tend to have a more empirical flavor. For example, Gallistel and King (2009) defend CCTM by canvassing a range of non-human empirical case studies. According to Gallistel and King, the case studies manifest a kind of productivity that CCTM can easily explain but eliminative connectionism cannot.