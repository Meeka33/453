 Modern proponents of LOTH typically endorse the   computational theory of mind  (CTM), which claims that the mind is a computational system. Some authors use the phrase “language of thought hypothesis” so that it definitionally includes CTM as one component. In a seminal contribution, Turing (1936) introduced what is now called the    Turing machine: an abstract model  of an idealized computing device. A Turing machine contains a central processor, governed by precise mechanical rules, that manipulates symbols inscribed along a linear array of memory locations. Impressed by the enormous power of the Turing machine formalism, many researchers seek to construct computational models of core mental processes, including reasoning, decision-making, and problem solving. This enterprise bifurcates into two main branches. The first branch is artificial intelligence (AI), which aims to build “thinking machines”. Here the goal is primarily an engineering one—to build a system that instantiates or at least simulates thought—without any pretense at capturing how the human mind works. The second branch, computational psychology, aims to construct computational models of human mental activity. AI and computational psychology both emerged in the 1960s as crucial elements in the new interdisciplinary initiative   cognitive science, which studies the mind by drawing upon psychology, computer science (especially AI), linguistics, philosophy, economics (especially game theory and behavioral economics), anthropology, and neuroscience. From the 1960s to the early 1980s, computational models offered within psychology were mainly Turing-style models. These models embody a viewpoint known as the classical computational theory of mind (CCTM). According to CCTM, the mind is a computational system similar in important respects to a Turing machine, and certain core mental processes are computations similar in important respects to computations executed by a Turing machine. CCTM fits together nicely with RTT+COMP. Turing-style computation operates over symbols, so any Turing-style mental computations must operate over mental symbols. The essence of RTT+COMP is postulation of mental symbols. Fodor (1975, 1981) advocates RTT+COMP+CCTM. He holds that certain core mental processes are Turing-style computations over Mentalese expressions. One can endorse RTT+COMP without endorsing CCTM. By positing a system of compositionally structured mental representations, one does not commit oneself to saying that operations over the representations are computational. Historical LOT theorists could not even formulate CCTM, for the simple reason that the Turing formalism had not been discovered. In the modern era, Harman (1973) and Sellars (1975) endorse something like RTT+COMP but not CCTM. Horgan and Tienson (1996) endorse RTT+COMP+CTM but not CCTM, i.e., classical CTM. They favor a version of CTM grounded in   connectionism, an alternative  computational framework that differs quite significantly from Turing’s approach. Thus, proponents of RTT+COMP need not accept that mental activity instantiates Turing-style computation. Fodor (1981) combines RTT+COMP+CCTM with a view that one might call the formal-syntactic conception of computation (FSC). According to FSC, computation manipulates symbols in virtue of their formal syntactic properties but not their semantic properties. FSC draws inspiration from modern logic, which emphasizes the formalization of deductive reasoning. To formalize, we specify a formal language whose component linguistic expressions are individuated non-semantically (e.g., by their geometric shapes). We describe the expressions as pieces of formal syntax, without considering what if anything the expressions mean. We then specify inference rules in syntactic, non-semantic terms. Well-chosen inference rules will carry true premises to true conclusions. By combining formalization with Turing-style computation, we can build a physical machine that manipulates symbols based solely on the formal syntax of the symbols. If we program the machine to implement appropriate inference rules, then its syntactic manipulations will transform true premises into true conclusions. CCTM+FSC says that the mind is a formal syntactic computing system: mental activity consists in computation over symbols with formal syntactic properties; computational transitions are sensitive to the symbols’ formal syntactic properties but not their semantic properties. The key term “sensitive” is rather imprecise, allowing some latitude as to the precise import of CCTM+FSC. Intuitively, the picture is that a mental symbol’s formal syntax rather than its semantics determines how mental computation manipulates it. The mind is a “syntactic engine”. Fodor (1987: 18–20) argues that CCTM+FSC helps illuminate a crucial feature of cognition: semantic coherence. For the most part, our thinking does not move randomly from thought to thought. Rather, thoughts are causally connected in a way that respects their semantics. For example, deductive inference carries true beliefs to true beliefs. More generally, thinking tends to respect epistemic properties such as warrant and degree of confirmation. In some sense, then, our thinking tends to cohere with semantic relations among thoughts. How is semantic coherence achieved? How does our thinking manage to track semantic properties? CCTM+FSC gives one possible answer. It shows how a physical system operating in accord with physical laws can execute computations that coherently track semantic properties. By treating the mind as a syntax-driven machine, we explain how mental activity achieves semantic coherence. We thereby answer the question: How is rationality mechanically possible? Fodor’s argument convinced many researchers that CCTM+FSC decisively advances our understanding of the mind’s relation to the physical world. But not everyone agrees that CCTM+FSC adequately integrates semantics into the causal order. A common worry is that the formal syntactic picture veers dangerously close to epiphenomenalism (Block 1990; Kazez 1994). Pre-theoretically, semantic properties of mental states seem highly relevant to mental and behavioral outcomes. For example, if I form an intention to walk to the grocery store, then the fact that my intention concerns the grocery store rather than the post office helps explain why I walk to the grocery store rather than the post office. Burge (2010) and Peacocke (1994) argue that cognitive science theorizing likewise assigns causal and explanatory importance to semantic properties. The worry is that CCTM+FSC cannot accommodate the causal and explanatory importance of semantic properties because it depicts them as causally irrelevant: formal syntax, not semantics, drives mental computation forward. Semantics looks epiphenomenal, with syntax doing all the work (Stich 1983). Fodor (1990, 1994) expends considerable energy trying to allay epiphenomenalist worries. Advancing a detailed theory of the relation between Mentalese syntax and Mentalese semantics, he insists that FSC can honor the causal and explanatory relevance of semantic properties. Fodor’s treatment is widely regarded as problematic (Arjo 1996; Aydede 1997b, 1998; Aydede & Robbins 2001; Perry 1998; Prinz 2011; Wakefield 2002), although Rupert (2008) and Schneider (2005) espouse somewhat similar positions. Partly in response to epiphenomenalist worries, some authors recommend that we replace FSC with an alternative semantic conception of computation (Block 1990; Burge 2010: 95–101; Figdor 2009; O’Brien & Opie 2006; Peacocke 1994, 1999; Rescorla 2012a). Semantic computationalists claim that computational transitions are sometimes sensitive to semantic properties, perhaps in addition to syntactic properties. More specifically, semantic computationalists insist that mental computation is sometimes sensitive to semantics. Thus, they reject any suggestion that the mind is a “syntactic engine” or that mental computation is sensitive only to formal  syntax.[6]  To illustrate, consider Mentalese conjunction. This mental symbol expresses the truth-table for conjunction. According to semantic computationalists, the symbol’s meaning is relevant (both causally and explanatorily) to mechanical operations over it. That the symbol expresses the truth-table for conjunction rather than, say, disjunction influences the course of computation. We should therefore reject any suggestion that mental computation is sensitive to the symbol’s syntactic properties rather than its semantic properties. The claim is not that mental computation explicitly represents semantic properties of mental symbols. All parties agree that, in general, it does not. There is no homunculus inside your head interpreting your mental language. The claim is rather that semantic properties influence how mental computation proceeds. (Compare: the momentum of a baseball thrown at a window causally influences whether the window breaks, even though the window does not explicitly represent the baseball’s momentum.) Proponents of the semantic conception differ as to how exactly they gloss the core claim that some computations are “sensitive” to semantic properties. They also differ in their stance towards CCTM. Block (1990) and Rescorla (2014a) focus upon CCTM. They argue that a symbol’s semantic properties can impact mechanical operations executed by a Turing-style computational system. In contrast, O’Brien and Opie (2006) favor connectionism over CCTM. Theorists who reject FSC must reject Fodor’s explanation of semantic coherence. What alternative explanation might they offer? So far, the question has received relatively little attention. Rescorla (2017a) argues that semantic computationalists can explain semantic coherence and simultaneously avoid epiphenomenalist worries by invoking neural implementation of semantically-sensitive mental computations. Fodor’s exposition sometimes suggests that CTM, CCTM, or CCTM+FSC is definitive of LOTH (1981: 26). Yet not everyone who endorses RTT+COMP endorses CTM, CCTM, or FSC. One can postulate a mental language without agreeing that mental activity is computational, and one can postulate mental computations over a mental language without agreeing that the computations are sensitive only to syntactic properties. For most purposes, it is not important whether we regard CTM, CCTM, or CCTM+FSC as definitive of LOTH. More important is that we track the distinctions among the doctrines.