 While writing the Principles of Mathematics, Russell discovered the paradox that now bears his name. Before we get to Russell's paradox, let us discuss some the method of diagonalization by which this and many other paradoxes are generated. The power set of a set S, ℘S contains all the subsets of S. Georg Cantor (1845–1918) used the method of diagonalization to show that for any set S, ℘S is larger than S. Here is Cantor's proof. Suppose that ℘S and S are the same size. Then, by the set-theoretic definition of “same size” (more correctly, ‘same cardinality’) there is a one-to-one surjection between S and ℘S. This means that there is a function that matches up each member of S with a unique member of ℘S so that there are no members of ℘S left over. Let us call this function, f. Then, if x is a member of S, f(x) is in ℘S. Now, since ℘S is the power set of S, it may be that x is in f(x) or it may not be in f(x).  Let us now define a set C: C = {x ∈ S:  x ∉ f(x)} Clearly, C is a subset of S, so it is in ℘S. By hypothesis, f is onto—for every member y of ℘S, there is an x ∈ S such that f(x) = y.  Thus there must be some c ∈ S such that f(c) = C Now, either c ∈ C or c ∉ C. Suppose that c is in C. Then, by the definition of C, c is not in f(c). That is to say, c ∉ C. But, if c is not in C, then c ∉ f(c). So, by the definition of C, c is in C.  Thus, c is in C if and only if c is not in C. Therefore, the assumption that a set is the same size as its power set leads to a paradox, and so this assumption must be false. Cantor's theorem has important consequences for the theory of propositional functions. Consider a model for a (first-order) logical language that has a domain D. The variables of the language range over members of D. Now let us add predicate variables to the language. These stand for propositional functions. How are we to interpret them in the model? The standard way of doing so—that is inherited from the extensional logic tradition—is to have predicate variables range over subsets of the domain. A model in which predicate variables range over all subsets of the domain is called a ‘standard model’ for second-order logic. Cantor's theorem tells us that the domain for predicate variables in the standard model is larger than the domain for individual variables.  If we have predicates of predicates, then the domain for third order predicates is even larger. And so on. Russell's paradox is very closely related to Cantor's theorem. There are two versions of the paradox: (1) the class version; (2) the propositional function version. I only discuss the propositional function version of the paradox. In his early writings, Russell wants logic to be a universal science. It should allow us to talk about properties of everything. By this he means that the variables in logic should be taken to range over all entities. But propositional functions, at least in the Principles, are entities. So variables should range over them. Now consider the predicate R such that, (∀x)(Rx = ¬xx) (Russell's predicate R is very similar to Cantor's set C.) If we instantiate and substitute R for x, we obtain RR ≡ ¬RR It seems, then, that the treatment of variables as completely general together with the liberty to define propositional functions by means of any well-formed formula enables us to derive a contradiction. Russell blocks the contradiction in the Principles by the introduction of a theory of types. This is a simple theory of types, that only distinguishes between the types of various propositional functions (or, in its class-form, of classes).  Let us depart from Russell's own exposition of the theory of types in order to give a more rigorous and more modern version of the theory. This will make my presentations of the ramified theory of types and more modern versions of type theory easier. We'll use one basic type, i (the type of individuals) and define the types as follows: The type <t1,…, tn> is the type of a relation among entities of types t1,…, tn. But, for simplicity, we will interpret this as the type of a function that takes these entities to a proposition. (Note that when n = 0, then the empty type, < >, is the type for propositions.) This definition incorporates the idea of a well-founded structure. There are no cycles here. We cannot have a function that takes as an argument a function of the same or higher type. Thus, simple type theory bans the sort of self-application that gives rise to Russell's paradox. The type hierarchy corresponds neatly to the hierarchy of domains that we saw in our discussion of Cantor's theorem.  A unary predicate has the type <i>; its domain is D—the set of individuals. A unary predicate of predicates has the type <<i>>, and this corresponds to the domain of subsets of D. And so on. For more,  see the entry on   Russell's paradox.